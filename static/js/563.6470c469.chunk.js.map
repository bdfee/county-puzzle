{"version":3,"file":"static/js/563.6470c469.chunk.js","mappings":"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","sources":["components/puzzle/pieces.js"],"sourcesContent":["import { useRef, useEffect } from 'react'\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch'\nimport { browserName } from 'react-device-detect'\n\nimport { select, selectAll } from 'd3-selection'\nimport { geoAlbersUsa, geoPath } from 'd3-geo'\nimport { drag } from 'd3-drag'\nimport { feature } from 'topojson-client'\n\nimport { stateDictionary } from '../../dictionaries/state'\nimport { stateId } from '../utilities'\n\nconst Pieces = ({\n  countyGeometry,\n  stateGeometry,\n  baseTopology,\n  stateFilter,\n  handleMouseMove,\n  handleMouseOut,\n  handleMouseOver,\n  setTooltipText,\n  updateTranslations\n}) => {\n  const mapRef = useRef()\n  const transformRef = useRef()\n\n  const transformUtility = (target, withReturn = true) => {\n    const [x, y] = target.attr('transform').match(/-?\\d+(\\.\\d+)?/g)\n    if (Math.abs(+x) < 0.25 && Math.abs(+y) < 0.25) {\n      target.attr('transform', 'translate(0,0)')\n      located(target)\n      if (withReturn) return [0, 0]\n    } else if (withReturn) return [+x, +y]\n  }\n\n  const located = (target) => {\n    target\n      .attr('stroke-width', 0.1)\n      .attr('stroke', 'lightgray')\n      .attr('fill', 'slategray')\n      .on('.drag', null)\n      .lower()\n    select(`#state-${target.attr('state-id')}`).lower()\n  }\n\n  const dragHandlerChrome = drag()\n    .on('start', function () {\n      setTooltipText('')\n      select(this).raise()\n      selectAll('.county').attr('pointer-events', 'none')\n    })\n    .on('drag', function ({ dx, dy }) {\n      const { e: startX, f: startY } = select(this).node().transform.baseVal[0].matrix\n      select(this).attr('transform', `translate(${startX + dx},${startY + dy})`)\n\n      // Log the new transform string\n    })\n    .on('end', function (d) {\n      updateTranslations(d.subject.id, transformUtility(select(this)))\n      selectAll('.county').attr('pointer-events', 'all')\n    })\n\n  const dragHandlerFirefox = drag()\n    .on('start', function () {\n      setTooltipText('')\n      select(this).raise()\n      selectAll('.county').attr('pointer-events', 'none')\n    })\n    .on('drag', function ({ dx, dy }) {\n      const transformMatrix = select(this).node().transform.baseVal[0].matrix\n      const { e: translateX, f: translateY } = transformMatrix\n      const scaleX = transformMatrix.a\n      const scaleY = transformMatrix.d\n      // get scale from react zoom pan pinch\n      const zoomScale = transformRef.current.instance.transformState.scale\n      // Calculate the new scaled translation\n      const scaledDx = dx / scaleX / zoomScale\n      const scaledDy = dy / scaleY / zoomScale\n\n      const newX = translateX + scaledDx\n      const newY = translateY + scaledDy\n\n      select(this).attr('transform', `translate(${newX},${newY})`)\n\n      // Log the new transform string\n    })\n    .on('end', function (d) {\n      updateTranslations(d.subject.id, transformUtility(select(this)))\n      selectAll('.county').attr('pointer-events', 'all')\n    })\n\n  useEffect(() => {\n    // remove any svg el from previous render\n    select(mapRef.current).selectAll('*').remove()\n\n    const width = window.outerWidth\n    const height = window.innerHeight\n\n    const counties = { type: 'GeometryCollection', geometries: countyGeometry }\n    const states = { type: 'GeometryCollection', geometries: stateGeometry }\n\n    // geoAlbersUSA projection, center on window/svg\n    const projection = geoAlbersUsa()\n      .translate([width / 2, height / 2])\n      .scale(900)\n\n    // Create a path generator that converts GeoJSON geometries to SVG path elements\n    const pathGenerator = geoPath().projection(projection)\n\n    const svg = select(mapRef.current)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', `0 0 ${width} ${height}`)\n\n    svg\n      .selectAll('.state')\n      .data(feature(baseTopology, states).features)\n      .enter()\n      .append('path')\n      .attr('class', 'state')\n      .attr('d', pathGenerator)\n      .attr('fill', ({ id }) => stateDictionary[id].color)\n      .attr('id', ({ id }) => `state-${id}`)\n\n    // Create a path element for each count\n    const countyPaths = svg\n      .selectAll('.county')\n      .data(feature(baseTopology, counties).features)\n      .enter()\n      .append('path')\n      .attr('class', 'county')\n      .attr('d', pathGenerator)\n      .attr('stroke', ({ id }) => stateDictionary[stateId(id)].color)\n      .attr('stroke-width', 0.15)\n      .attr('fill', 'lightgray')\n      .attr('id', ({ id }) => `county-${id}`)\n      .attr('state-id', ({ id }) => `${stateId(id)}`)\n      .attr('data-name', ({ properties }) => `${properties.name}`)\n      .attr('is-hidden', false)\n      .attr(\n        'transform',\n        ({\n          properties: {\n            transpose: [x, y]\n          }\n        }) => `translate(${x}, ${y})`\n      )\n      .on('mouseover', function (e, d) {\n        if (select(this).attr('is-hidden') === 'false') {\n          handleMouseOver(e, d)\n        }\n      })\n      .on('mousemove', (e) => handleMouseMove(e))\n      .on('mouseout', handleMouseOut)\n\n    const dragHandler = browserName === 'Chrome' ? dragHandlerChrome : dragHandlerFirefox\n\n    countyPaths.call(dragHandler).each(function () {\n      transformUtility(select(this), false)\n    })\n  }, [countyGeometry])\n\n  useEffect(() => {\n    if (stateFilter) {\n      const node = select(`#state-${stateFilter}`).node()\n      transformRef.current.zoomToElement(node, 2, 500, 'easeOut')\n    } else {\n      transformRef.current.resetTransform(500, 'easeOut')\n    }\n\n    selectAll('.county, .state')\n      .style('visibility', 'visible')\n      .attr('pointer-events', 'all')\n      .attr('is-hidden', false)\n    if (stateFilter.length) {\n      selectAll('.county, .state')\n        .filter(({ id }) => (stateFilter.includes(stateId(id)) ? false : true))\n        .style('visibility', 'hidden')\n        .attr('pointer-events', 'none')\n        .attr('is-hidden', true)\n    }\n  }, [stateFilter, countyGeometry])\n\n  return (\n    <TransformWrapper ref={transformRef}>\n      <TransformComponent>\n        <div ref={mapRef} className=\"pieces\"></div>\n      </TransformComponent>\n    </TransformWrapper>\n  )\n}\n\nexport default Pieces\n"],"names":["_ref","countyGeometry","stateGeometry","baseTopology","stateFilter","handleMouseMove","handleMouseOut","handleMouseOver","setTooltipText","updateTranslations","mapRef","useRef","transformRef","transformUtility","target","withReturn","arguments","length","undefined","_target$attr$match","attr","match","_target$attr$match2","_slicedToArray","x","y","Math","abs","located","on","lower","select","concat","dragHandlerChrome","drag","this","raise","selectAll","_ref2","dx","dy","_select$node$transfor","node","transform","baseVal","matrix","startX","e","startY","f","d","subject","id","dragHandlerFirefox","_ref3","transformMatrix","translateX","translateY","scaleX","a","scaleY","zoomScale","current","instance","transformState","scale","newX","newY","useEffect","remove","width","window","outerWidth","height","innerHeight","counties","type","geometries","states","projection","geoAlbersUsa","translate","pathGenerator","geoPath","svg","append","data","feature","features","enter","_ref4","stateDictionary","color","_ref5","countyPaths","_ref6","stateId","_ref7","_ref8","_ref9","properties","name","_ref10","_ref10$properties$tra","transpose","dragHandler","browserName","call","each","zoomToElement","resetTransform","style","filter","_ref11","includes","_jsx","TransformWrapper","ref","children","TransformComponent","className"],"sourceRoot":""}